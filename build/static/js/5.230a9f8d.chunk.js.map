{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/Allquotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuote","sort","quoteA","quoteB","sorting","onClick","push","list","map","quote","DUMMY_QUOTES","Allquotes"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,wFCkB5CC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCkCSC,EA9BG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAIXC,EAAgD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QACpCC,GAjBYV,EAiBaT,EAAMS,OAjBXC,EAiBmBK,EAhBtCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAgBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QANS,WACrBb,EAAQc,KAAK,oBAAsBV,EAAqB,OAAS,SAK7D,kBAAuCA,EAAqB,aAAe,iBAE7E,oBAAId,UAAWC,IAAQwB,KAAvB,SACGP,EAAYQ,KAAI,SAACC,GAAD,OACf,cAAC,EAAD,CAEErB,GAAIqB,EAAMrB,GACVF,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMrB,aCjCjBsB,EAAe,CAAC,CAClBtB,GAAI,KACJF,OAAQ,SACRD,KAAM,kCAEV,CACIG,GAAI,KACJF,OAAQ,mBACRD,KAAM,sDAOK0B,UAJG,WACd,OAAO,cAAC,EAAD,CAAWrB,OAAQoB","file":"static/js/5.230a9f8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2zCTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__225m7\",\"sorting\":\"QuoteList_sorting__zIH5d\"};","import classes from './QuoteItem.module.css';\nimport { Link } from \"react-router-dom\";\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  \n  const queryParam = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParam.get(\"sort\") === \"asc\";\n  const sortedQuote = sortQuotes(props.quotes, isSortingAscending);\n  const sortingHandler = () => {\n    history.push(\"/Allquotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>Sort {isSortingAscending ? 'Descending' : 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuote.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import QuoteList from \"../components/quotes/QuoteList\";\r\n\r\nconst DUMMY_QUOTES = [{\r\n    id: 'q1',\r\n    author: 'Anurag',\r\n    text: 'Cricket is a nice game to play'\r\n},\r\n{\r\n    id: 'q2',\r\n    author: 'Anurag-Developer',\r\n    text: 'Work hard to place in top product based companies'\r\n}]\r\n\r\nconst Allquotes = () => {\r\n    return <QuoteList quotes={DUMMY_QUOTES}/>\r\n}\r\n\r\nexport default Allquotes;"],"sourceRoot":""}